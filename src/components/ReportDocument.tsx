import React from 'react';
import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';
import { PolicyOption } from '@/types/policies';

// Create styles
const styles = StyleSheet.create({
  page: {
    flexDirection: 'column',
    backgroundColor: '#FFFFFF',
    padding: 30,
  },
  section: {
    margin: 10,
    padding: 10,
    flexGrow: 1,
  },
  header: {
    fontSize: 24,
    marginBottom: 20,
    textAlign: 'center',
    color: '#7D1F2A', // policy-maroon
    fontWeight: 'bold',
  },
  subheader: {
    fontSize: 18,
    marginBottom: 10,
    color: '#7D1F2A', // policy-maroon
    fontWeight: 'bold',
  },
  text: {
    fontSize: 12,
    marginBottom: 5,
  },
  bold: {
    fontWeight: 'bold',
  },
  policyCard: {
    marginBottom: 15,
    padding: 10,
    borderLeft: '4 solid #7D1F2A',
    backgroundColor: '#F9F9F9',
  },
  policyTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  policyDescription: {
    fontSize: 10,
    marginBottom: 5,
  },
  policyMeta: {
    fontSize: 10,
    color: '#666666',
  },
  scoreBox: {
    padding: 10,
    backgroundColor: '#F0F0F0',
    borderRadius: 5,
    marginBottom: 20,
    flexDirection: 'row',
    alignItems: 'center',
  },
  scoreValue: {
    fontSize: 24,
    fontWeight: 'bold',
    marginRight: 10,
  },
  scoreLabel: {
    fontSize: 12,
  },
  reflectionQuestion: {
    marginBottom: 15,
    padding: 10,
    backgroundColor: '#F5F5F5',
    borderRadius: 5,
  },
  reflectionCategory: {
    fontSize: 10,
    color: '#666666',
    marginBottom: 3,
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: 'center',
    fontSize: 10,
    color: '#666666',
  },
});

interface ReportDocumentProps {
  policies: PolicyOption[];
  reflectionData: any;
}

// Create Document Component
const ReportDocument: React.FC<ReportDocumentProps> = ({ policies, reflectionData }) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <View style={styles.section}>
        <Text style={styles.header}>Refugee Education Policy Report</Text>
        <Text style={styles.text}>
          This report summarizes the education policies selected for refugee integration in the Republic of Bean.
        </Text>
        
        <View style={styles.scoreBox}>
          <Text style={styles.scoreValue}>{reflectionData.equityScore}</Text>
          <View>
            <Text style={styles.scoreLabel}>Equity Score</Text>
            <Text style={[styles.scoreLabel, { fontSize: 8 }]}>Based on UNESCO inclusion metrics</Text>
          </View>
        </View>
        
        <Text style={styles.subheader}>Selected Policies</Text>
        {policies.map((policy) => (
          <View key={policy.id} style={styles.policyCard}>
            <Text style={styles.policyTitle}>{policy.title}</Text>
            <Text style={styles.policyDescription}>{policy.description}</Text>
            <Text style={styles.policyMeta}>
              {policy.area ? `Area: ${policy.area} | ` : ''}Impact: {policy.impact} | Tier: {policy.tier}
            </Text>
          </View>
        ))}
        
        <Text style={styles.subheader}>Reflection Questions</Text>
        {reflectionData.questions.slice(0, 5).map((question) => (
          <View key={question.id} style={styles.reflectionQuestion}>
            <Text style={styles.reflectionCategory}>{question.category}</Text>
            <Text style={styles.text}>{question.question}</Text>
          </View>
        ))}
      </View>
      
      <View style={styles.footer}>
        <Text>Generated by The CHALLENGE Game | {new Date().toLocaleDateString()}</Text>
      </View>
    </Page>
    
    {/* Second page for remaining questions if needed */}
    {reflectionData.questions.length > 5 && (
      <Page size="A4" style={styles.page}>
        <View style={styles.section}>
          <Text style={styles.subheader}>Additional Reflection Questions</Text>
          {reflectionData.questions.slice(5).map((question) => (
            <View key={question.id} style={styles.reflectionQuestion}>
              <Text style={styles.reflectionCategory}>{question.category}</Text>
              <Text style={styles.text}>{question.question}</Text>
            </View>
          ))}
        </View>
        
        <View style={styles.footer}>
          <Text>Generated by The CHALLENGE Game | {new Date().toLocaleDateString()}</Text>
        </View>
      </Page>
    )}
  </Document>
);

export default ReportDocument;